import {UsersRepository} from "../repositories/users-repository";
import {UsersService} from "../services/users-service";
import {AuthService} from "../services/auth-service";
import {EmailAdapter} from "../adapters/email-adapter";
import {EmailManager} from "../managers/email-manager";
import {ReactionsRepository} from "../repositories/reactions-repository";
import {LikeService} from "../services/like-service";
import {RefreshTokensMetaRepository} from "../repositories/refresh-tokens-meta-repository";
import {JwtService} from "../application/jwt-service";
import {SessionsService} from "../services/sessions-service";
import {BlogsRepository} from "../repositories/blogs-repository";
import {BlogsService} from "../services/blogs-service";
import {PostsRepository} from "../repositories/posts-repository";
import {PostsService} from "../services/posts-service";
import {CommentsRepository} from "../repositories/comments-repository";
import {CommentsService} from "../services/comments-service";
import {DataBase} from "../repositories/dataBase";
import {QueryRepository} from "../repositories/query-repository";
import {container} from "./inversify.config";

export const db = container.get<DataBase>(DataBase);//new DataBase(settingsEnv.MONGO_URL);
export const queryRepository = container.get<QueryRepository>(QueryRepository);//new QueryRepository(db);
const usersRepository = container.get<UsersRepository>(UsersRepository);//new UsersRepository(db);
const reactionsRepository = container.get<ReactionsRepository>(ReactionsRepository);//new ReactionsRepository(db);
const refreshTokensMetaRepository = container.get<RefreshTokensMetaRepository>(RefreshTokensMetaRepository);//new RefreshTokensMetaRepository(db);
const blogsRepository = container.get<BlogsRepository>(BlogsRepository);//new BlogsRepository(db);
const postsRepository = container.get<PostsRepository>(PostsRepository);//new PostsRepository(db);
const commentsRepository = container.get<CommentsRepository>(CommentsRepository);//new CommentsRepository(db);
const emailAdapter = container.get<EmailAdapter>(EmailAdapter);//new EmailAdapter();
const emailManager = container.get<EmailManager>(EmailManager);//new EmailManager(emailAdapter);
export const usersService = container.get<UsersService>(UsersService);//new UsersService(usersRepository, refreshTokensMetaRepository);
export const authService = container.get<AuthService>(AuthService);//new AuthService(usersRepository, emailManager);
export const likeService = container.get<LikeService>(LikeService);//new LikeService(reactionsRepository);
export const jwtService = container.get<JwtService>(JwtService);//new JwtService(refreshTokensMetaRepository);
export const sessionsService = container.get<SessionsService>(SessionsService);//new SessionsService(refreshTokensMetaRepository);
export const commentsService = container.get<CommentsService>(CommentsService);//new CommentsService(commentsRepository);
export const postsService = container.get<PostsService>(PostsService);//new PostsService(postsRepository, commentsService, queryRepository);
export const blogsService = container.get<BlogsService>(BlogsService);//new BlogsService(blogsRepository, postsService);